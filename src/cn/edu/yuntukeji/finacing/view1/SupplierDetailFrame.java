package cn.edu.yuntukeji.finacing.view1;

import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;

import javax.swing.ButtonGroup;

import cn.edu.yuntukeji.finacing.controller.Dispacher;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

/**
 *
 * @author Administrator
 */
public class SupplierDetailFrame extends javax.swing.JFrame {
    //添加属性按钮组
    private ButtonGroup IDNameGroup = new ButtonGroup();
    private Dispacher dp;
    private static SupplierDetailFrame supplierDetailFrame = null;
    /**
     * Creates new form SupplierDetailFrame
     */
    private SupplierDetailFrame() {
    	 dp = new Dispacher();
        initComponents();
    //将编号/简称按钮添加到按钮组
        this.IDNameGroup.add(radioID);
        this.IDNameGroup.add(radioSimpleName);
    }
public static SupplierDetailFrame getInstance(){
	if(supplierDetailFrame == null){
		supplierDetailFrame = new SupplierDetailFrame();
	}
	return supplierDetailFrame;
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboSt = new javax.swing.JComboBox();
        radioSimpleName = new javax.swing.JRadioButton();
        radioID = new javax.swing.JRadioButton();
        btnSelect = new javax.swing.JButton();
        txtImport = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSupplierDetail = new javax.swing.JTable();
        btnPrint = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("供应商交易管理");

        jLabel1.setText("第");

        jLabel2.setText("季度 按供应商");

        comboSt.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4" }));
        comboSt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboStActionPerformed(evt);
            }
        });

        radioSimpleName.setSelected(true);
        radioSimpleName.setText("简称");
        radioSimpleName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSimpleNameActionPerformed(evt);
            }
        });

        radioID.setSelected(true);
        radioID.setText("编号");
        radioID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioIDActionPerformed(evt);
            }
        });

        btnSelect.setText("查询");
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });

        txtImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtImportActionPerformed(evt);
            }
        });

        tblSupplierDetail.setModel(new javax.swing.table.DefaultTableModel(
            null,
            new String [] {
                "供应商编号", "供应商简称", "商品名称", "交易数量", "交易金额"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblSupplierDetail);

        btnPrint.setText("打印报表");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        btnClose.setText("关闭");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnPrint)
                .addGap(36, 36, 36)
                .addComponent(btnClose)
                .addGap(58, 58, 58))
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboSt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(51, 51, 51)
                        .addComponent(radioID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(radioSimpleName)
                        .addGap(71, 71, 71)
                        .addComponent(btnSelect)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtImport, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 258, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboSt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(radioID)
                    .addComponent(radioSimpleName)
                    .addComponent(btnSelect)
                    .addComponent(txtImport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrint)
                    .addComponent(btnClose))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboStActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboStActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboStActionPerformed

    private void radioIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioIDActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPrintActionPerformed

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
      

    	
    	Integer quarter = Integer.parseInt((String) comboSt.getSelectedItem());
    	JSONArray json = null;
    	if(radioID.isSelected()){
    		

        	Map<String, Object> request = new HashMap<>();
    		request.put("url", "Supplier/queryTradesGroupQuarterById");	
    		Map<String,Object> salersMan  = new LinkedHashMap<>();
    		salersMan.put("id", Integer.parseInt((String) txtImport.getText()));
    		salersMan.put("jidu", Integer.parseInt((String) comboSt.getSelectedItem()));
    		request.put("param", salersMan);
    		Map<String, Object> reMap = dp.execute(request);
    		json = JSONArray.fromObject(reMap.get("result"));
    	}if(radioSimpleName.isSelected()){
    		
    		Map<String, Object> request = new HashMap<>();
    		request.put("url", "Supplier/queryTradesGroupQuarterBySimpleName");	
    		Map<String,Object> salersMan  = new LinkedHashMap<>();
    		salersMan.put("simpleName", txtImport.getText()); 
    		salersMan.put("jidu", Integer.parseInt((String) comboSt.getSelectedItem()));
    	   	
    		request.put("param", salersMan);
    		Map<String, Object> reMap = dp.execute(request);
    		json = JSONArray.fromObject(reMap.get("result"));
    	
    	}
    	
    	System.out.println(json);
    	
		Object [][] o = new Object [json.size()][5];
		for (int i = 0;i<json.size();i++) {
			if(json.get(i).getClass()!=net.sf.json.JSONNull.class){
			o[i][0] = ((JSONObject)json.get(i)).getString("supplierId");
			o[i][1] = ((JSONObject)json.get(i)).getString("supplierSimpleName");
			o[i][2] = ((JSONObject)json.get(i)).getString("productName");
			o[i][3]= ((JSONObject)json.get(i)).getString("tradeCount");
			o[i][4] = ((JSONObject)json.get(i)).getString("tradeMonney");
			
		}
		}
		 tblSupplierDetail.setModel(new javax.swing.table.DefaultTableModel(
		            o,
		            new String [] {
		                "供应商编号", "供应商简称", "商品名称", "交易数量", "交易金额"
		            }
		        ) {
		            boolean[] canEdit = new boolean [] {
		                false, false, false, false, false
		            };

		            public boolean isCellEditable(int rowIndex, int columnIndex) {
		                return canEdit [columnIndex];
		            }
		        });
    	
		 tblSupplierDetail.updateUI();
    }//GEN-LAST:event_btnSelectActionPerformed

    private void radioSimpleNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSimpleNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioSimpleNameActionPerformed

    private void txtImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtImportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtImportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SupplierDetailFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SupplierDetailFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SupplierDetailFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SupplierDetailFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SupplierDetailFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnSelect;
    private javax.swing.JComboBox comboSt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton radioID;
    private javax.swing.JRadioButton radioSimpleName;
    private javax.swing.JTable tblSupplierDetail;
    private javax.swing.JTextField txtImport;
    // End of variables declaration//GEN-END:variables
}
